<template>
    <div class="mt-4">
        <h3 class="text-xl font-semibold mt-4">{{ title }}</h3>
        <textarea
            v-model="item_String"
            class="bg-blue-200 text-blue-700 dark:bg-green-400 dark:text-green-900 rounded-full px-2 py-1 mt-2"
        ></textarea>
        <div class="flex flex-wrap mt-2">
            <div
                v-for="(item, index) in parsedItem"
                :key="index"
                class="mr-2 rounded-full bg-blue-200 text-blue-700 dark:bg-green-400 dark:text-green-900 px-2 py-1"
            >
                {{ item }}
                <button
                    @click.prevent="removeItem(index)"
                    class="text-red-500 hover:text-red-700 dark:text-yellow-300 dark:hover:text-yellow-500 focus:outline-none"
                >
                    X
                </button>
                <!-- <input type="hidden" :name="`${title}[${item}]`" v-model="parsedItem[index]"/> -->
            </div>
        </div>
    </div>
</template>

<script>
export default {
    props: {
        value: {
            type: Array,
            required: true,
        },
        title: {
            type: String,
            required: true,
        },
    },
    data() {
        return {
            item_String: '',
        }
    },
    computed: {
        parsedItem() {
            let item = this.item_String.split(/\s*,\s*|\s*;\s*|\n/).filter((item) => item.trim() !== '')
            // this.value.splice(0, this.value.length)
            // this.value.push(...item)
            return item
        },
    },
    mounted() {
        this.item_String = this.value.join(', ')
    },
    // unmounted() {
    //     this.value.push(...this.parsedItem) // Worked Client Side
    // },
    // beforeUnmount() {
        // this.value.push(...this.item_String.split(/\s*,\s*|\s*;\s*|\n/).filter((item) => item.trim() !== '')) // Worked Client Side
    //     this.value.push(...this.parsedItem) // Worked Client Side
    // },
    methods: {
        // addItem() {
        //     this.value.push('')
        // },
        removeItem(index) {
            this.parsedItem.splice(index, 1)
            this.item_String = this.parsedItem.join(', ')
        },
    },
}
</script>
